{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACI,sBAAKC,UAAU,sDAAf,UACD,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACpB,gCACE,6BAAKF,IACL,4BAAIC,WCcIK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACE,8BAECA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKGC,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,MAAf,SACA,uBACEA,UAAU,mCACbW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCGI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YCuCIC,G,wDArCd,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAbzC,EAAKC,MAAQ,CACVvB,OAAQ,GACJK,YAAa,IAJR,E,qDAQX,WAAqB,IAAD,OACrBmB,MAAM,8CACNC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAOxC,WAAU,IAAD,EACwBC,KAAKN,MAA7BvB,EADA,EACAA,OAAQK,EADR,EACQA,YACVyB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACnC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAErD,OAAQjC,EAAOmC,OAGf,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQ8B,SANvB,oBAAIlC,UAAU,KAAd,4B,GAzBewC,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5548af16.chunk.js","sourcesContent":["import React from 'react'; \r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t  <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t   <div>\r\n\t\t     <h2>{name}</h2>\r\n\t\t     <p>{email}</p>\r\n\t\t   </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t  <div>\r\n\t\t {\r\n\t\t \trobots.map((user, i) => {\r\n\t\t\t  return (\r\n\t\t\t    <Card \r\n\t\t\t\t   key={i}\r\n\t\t\t\t   id={robots[i].id} \r\n\t\t\t\t   name={robots[i].name} \r\n\t\t\t\t   email={robots[i].email}\r\n\t\t\t\t  />\r\n\t\t\t   ); \r\n\t\t\t})\r\n\t\t }\r\n\t  </div>\r\n   );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n  return (\r\n  \t<div className='pa2'>\r\n\t  <input\r\n\t    className='pa3 ba b--green bg-lightest-blue'\r\n\t\ttype='search' \r\n\t\tplaceholder='Search robots'\r\n\t\tonChange={searchChange}\r\n\t  />\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '800px' }}>\r\n\t\t  {props.children}\r\n\t\t</div>\r\n   );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t  super()\r\n\t  this.state = {\r\n\t  \t  robots: [],\r\n          searchfield: ''\r\n\t  }\r\n\t}\r\n\r\n    componentDidMount() {\r\n\t  fetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response=> response.json())\r\n\t\t.then(users => this.setState({ robots: users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t  return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n\t\t})\r\n\t\t  return !robots.length ? \r\n\t\t\t<h1 className='tc'>Loading...</h1> :\r\n\t\t\t(\r\n\t\t\t <div className='tc'>\r\n\t\t\t   <h1 className='f1'>RoboFriends</h1>\r\n\t\t\t   <SearchBox searchChange={this.onSearchChange} />\r\n\t\t\t   <Scroll>\r\n\t\t\t     <CardList robots={filteredRobots}/>\r\n\t\t\t   </Scroll>  \r\n\t\t\t </div>\r\n\t        );\r\n    }   \r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}